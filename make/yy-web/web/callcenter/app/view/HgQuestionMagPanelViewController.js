/*
 * File: app/view/HgQuestionMagPanelViewController.js
 *
 * This file was generated by Sencha Architect version 3.2.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 5.0.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 5.0.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('CallCenterApp.view.HgQuestionMagPanelViewController', {
    extend: 'Ext.app.ViewController',
    alias: 'controller.hgquestionmagpanel',

    onQuestionCustGridPanelRender: function (component, eOpts) {
        /**获取LoginSuccessJsonStore中的data**/
        var LoginSuccessStore = Ext.getStore('LoginSuccessJsonStore');
        var token = LoginSuccessStore.data.items[0].data.token;

        var QuestionCustStore = Ext.getStore('QuestionCustStore');
        var ajaxProxy = QuestionCustStore.getProxy();
        var url = Ext.getStore('ConfigStore').getAt(1).get('UserServerUrl');
        ajaxProxy.setUrl(url + "/mag/hg/question/getAllUser.do?token=" + token);
        QuestionCustStore.load();
    },

    onQuestionCustGridPanelRowClick: function (tableview, record, tr, rowIndex, e, eOpts) {
        var HgQuestionMagPanel = tableview.up('#HgQuestionMagPanel');

        var QuestionDetalArea = HgQuestionMagPanel.down('#QuestionDetalArea');


        var userId = record.data.f_mid;

        /**获取LoginSuccessJsonStore中的data**/
        var LoginSuccessStore = Ext.getStore('LoginSuccessJsonStore');
        var token = LoginSuccessStore.data.items[0].data.token;

        var url = Ext.getStore('ConfigStore').getAt(1).get('UserServerUrl');


        Ext.Ajax.request({
            url: url + '/mag/hg/question/getDetail.do',
            params: {
                userId: userId,
                token: token,
                Page: 1,
                PageSize: 10000
            },
            success: function (response) {
                var text = response.responseText;
                var result = JSON.parse(text);

                if (result === null) {
                    Ext.Msg.alert('提示', '保存出错了，结果：' + text);
                    return;
                }

                if (result.flag === '0') {
                    var array = result.data;

                    var message = '';

                    for (var i = array.length - 1; i >= 0; i--) {
                        var record = array[i];

                        var date = new Date(record.f_infotime * 1000);
                        if (record.f_type === 1) {

                            message = message + '客户提问：' + date.toLocaleDateString() + date.toLocaleTimeString() + '\n\t' + record.f_info + '\n' + '\n';


                        } else {
                            message = message + '回复内容：' + date.toLocaleDateString() + date.toLocaleTimeString() + '\n\t' + record.f_info + '\n' + '\n';


                        }
                    }

                    QuestionDetalArea.setValue(message);

                } else {
                    Ext.Msg.alert('提示', '发送失败！请重试');
                }
            }
        });

    },

    onReplySubmitBtnClick: function (button, e, eOpts) {
        var HgQuestionMagPanel = button.up('#HgQuestionMagPanel');

        var QuestionDetalArea = HgQuestionMagPanel.down('#QuestionDetalArea');

        var QuestionCustGridPanel = HgQuestionMagPanel.down('#QuestionCustGridPanel');

        var contentsField = HgQuestionMagPanel.down('#ReplyContentField');

        var userId = QuestionCustGridPanel.selModel.selected.items[0].data.f_mid;

        var contents = contentsField.getValue();

        if (contents === null || contents === '') {
            return;
        }
        var url = Ext.getStore('ConfigStore').getAt(1).get('UserServerUrl');
        Ext.Ajax.request({
            url: url + '/user/hg/question/reply.do',
            params: {
                content: contents,
                userId: userId,

            },
            success: function (response) {
                var text = response.responseText;
                var result = JSON.parse(text);

                if (result === null) {
                    Ext.Msg.alert('提示', '保存出错了，结果：' + text);
                    return;
                }

                if (result.errno === 'PT_ERROR_SUCCESS' || result.flag === '0') {

                    /**消息发送成功，刷新记录列表**/


                    contentsField.reset();


                    /**获取LoginSuccessJsonStore中的data**/
                    var LoginSuccessStore = Ext.getStore('LoginSuccessJsonStore');
                    var token = LoginSuccessStore.data.items[0].data.token;

                    var url = Ext.getStore('ConfigStore').getAt(1).get('UserServerUrl');


                    Ext.Ajax.request({
                        url: url + '/mag/hg/question/getDetail.do',
                        params: {
                            userId: userId,
                            token: token,
                            Page: 1,
                            PageSize: 10000
                        },
                        success: function (response) {
                            var text = response.responseText;
                            var result = JSON.parse(text);

                            if (result === null) {
                                Ext.Msg.alert('提示', '保存出错了，结果：' + text);
                                return;
                            }

                            if (result.flag === '0') {
                                var array = result.data;

                                var message = '';
                                for (var i = array.length - 1; i >= 0; i--) {
                                    var record = array[i];

                                    var date = new Date(record.f_infotime * 1000);
                                    if (record.f_type === 1) {

                                        message = message + '客户提问：' + date.toLocaleDateString() + date.toLocaleTimeString() + '\n\t' + record.f_info + '\n' + '\n';


                                    } else {
                                        message = message + '回复内容：' + date.toLocaleDateString() + date.toLocaleTimeString() + '\n\t' + record.f_info + '\n' + '\n';


                                    }
                                }

                                QuestionDetalArea.setValue(message);

                            } else {
                                Ext.Msg.alert('提示', '发送失败！请重试');
                            }
                        }
                    });


                } else {
                    Ext.Msg.alert('提示', '发送出错了,请重试！');
                }
            }
        });
    }

});
