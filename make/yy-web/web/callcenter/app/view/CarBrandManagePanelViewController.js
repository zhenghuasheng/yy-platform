/*
 * File: app/view/CarBrandManagePanelViewController.js
 *
 * This file was generated by Sencha Architect version 3.2.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 5.0.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 5.0.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('CallCenterApp.view.CarBrandManagePanelViewController', {
    extend: 'Ext.app.ViewController',
    alias: 'controller.carbrandmanagepanel',

    dataShow: function () {
        var carBrandManagePanel = Ext.getCmp('CarBrandManagePanel');
        var systemSelector = carBrandManagePanel.down('#systemSelector');
        var systemId = systemSelector.getValue();

        if (systemId === null) {
            return;
        }

        var url = Ext.getStore('ConfigStore').getAt(0).get('OrderUrl');

        var carBrandOnStore = Ext.getStore('CarBrandOnStore');
        var ajaxProxyOn = carBrandOnStore.getProxy();
        ajaxProxyOn.setUrl(url + "/biz/app/brand/get.do?" + "appId=" + systemId + "&status=true");
        carBrandOnStore.reload();

        var carBrandOffStore = Ext.getStore('CarBrandOffStore');
        var ajaxProxyOff = carBrandOffStore.getProxy();
        ajaxProxyOff.setUrl(url + "/biz/app/brand/get.do?" + "appId=" + systemId + "&status=false");
        carBrandOffStore.reload();
    },

    handlerHelp: function (id, tab, status) {
        var carBrandManagePanel = view.up('#CarBrandManagePanel');
        var systemSelector = carBrandManagePanel.down('#systemSelector');
        var systemId = systemSelector.getValue();
        var url = Ext.getStore('ConfigStore').getAt(0).get('OrderUrl');

        Ext.Ajax.request({
            url: url + '/biz/app/brand/edit.do',
            params: {
                appId: systemId,
                brandId: id,
                status: status

            },
            success: function (response) {
                var text = response.responseText;
                var result = JSON.parse(text);

                if (result === null) {
                    Ext.Msg.alert('提示', '操作出错');
                    return;
                }

                if (result.succeed === true) {

                    this.dataShow(tab);

                } else {
                    Ext.Msg.alert('提示', '保存出错了，错误：' + result.errMsg);
                }
            }
        });
    },

    onSystemSelectorSelect: function (combo, records, eOpts) {
        this.dataShow();
    },

    onSystemSelectorBeforeRender: function (component, eOpts) {
        var url = Ext.getStore('ConfigStore').getAt(0).get('OrderUrl');

        var businessSystemManagerStore = Ext.getStore('BusinessSystemManagerStore');

        var ajaxProxy = businessSystemManagerStore.getProxy();

        ajaxProxy.setUrl(url + "/biz/app/list.do");

        businessSystemManagerStore.load();
    },

    onCarBrandManagePanelBeforeRender: function (component, eOpts) {
        var carBrandManagePanel = Ext.getCmp('CarBrandManagePanel');
        var systemSelector = carBrandManagePanel.down('#systemSelector');
        var systemId = systemSelector.getValue();

        if (systemId === null) {
            Ext.getStore('CarBrandOnStore').removeAll();
            Ext.getStore('CarBrandOffStore').removeAll();
            return;
        }
        this.dataShow();
    }

});
