/*
 * File: app/view/EticketManagerPanelViewController.js
 *
 * This file was generated by Sencha Architect version 3.2.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 5.0.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 5.0.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('CallCenterApp.view.EticketManagerPanelViewController', {
    extend: 'Ext.app.ViewController',
    alias: 'controller.eticketmanagerpanel',

    onEticketManagerGridPanelCellContextMenu: function (tableview, td, cellIndex, record, tr, rowIndex, e, eOpts) {
        var targetDel = "/action/eticket/delete.do";
        var storeId = 'EticketManagerStore';
        var refreshUrl = "/action/eticket/list.do?system=ytadmin@7788";
        var rightMenu = new CallCenterApp.view.RightClickMenu({
            record: record,
            targetDel: targetDel,
            storeId: storeId,
            refreshUrl: refreshUrl
        });
        e.preventDefault();
        //定位。显示 右键菜单
        rightMenu.showAt(e.getXY());
    },

    onEticketManagerGridPanelRowClick: function (tableview, record, tr, rowIndex, e, eOpts) {
        var record = record.data;
        var EticketManagerPropertyGrid = Ext.getCmp('EticketManagerPropertyGrid');
        /**LimitShop**/
        var useshop = record.f_useshop;
        var result;
        var shopStr;
        if (useshop !== undefined && useshop !== '') {
            result = JSON.parse(useshop);
            shopStr = result[0].shopName;
            for (var i = 1; i < result.length; i++) {
                if (shopStr === undefined) {
                    shopStr = result[i].shopName;
                } else {
                    if (result[i].shopName !== undefined) {
                        shopStr = shopStr + ',' + result[i].shopName;
                    }
                }

            }
        }
        var f_useCount;
        if (record.f_initnum !== undefined && record.f_prenum !== undefined) {
            f_useCount = record.f_initnum - record.f_prenum;
        } else {
            f_useCount = undefined;
        }

        EticketManagerPropertyGrid.setSource({
            f_id: record.f_id,
            f_name: record.f_name,
            f_type: record.f_type,
            f_starttime: (record.f_starttime === undefined) ? undefined : record.f_starttime,
            f_endtime: (record.f_endtime === undefined) ? undefined : record.f_endtime,
            f_oneuse: record.f_oneuse,
            f_oneget: record.f_oneget,
            f_getlimite: record.f_getlimite,
            f_minspending: (record.f_minspending === undefined) ? undefined : record.f_minspending + '元',
            f_money: (record.f_money === undefined) ? undefined : record.f_money + '元',
            f_rebate: record.f_rebate,
            f_prenum: record.f_prenum,
            f_details: record.f_details,
            f_message: record.f_message,
            f_userule: record.f_userule,
            f_useshop: shopStr,
            f_initnum: record.f_initnum,
            f_useCount: f_useCount

        }, {
            f_id: {
                displayName: '电子券序号',
            },
            f_name: {
                displayName: '电子券名称',
            },
            f_type: {
                displayName: '电子券类型',
            },
            f_starttime: {
                displayName: '有效开始日期',
            },
            f_endtime: {
                displayName: '有效结束日期',
            },
            f_oneuse: {
                displayName: '单人单日限用',
            },
            f_oneget: {
                displayName: '单人单日限领',
            },
            f_getlimite: {
                displayName: '单人限领',
            },
            f_minspending: {
                displayName: '最低消费额',
            },
            f_money: {
                displayName: '优惠券金额',
            },
            f_rebate: {
                displayName: '折扣',
            },
            f_prenum: {
                displayName: '当前剩余数量',
            },
            f_details: {
                displayName: '优惠详情',
            },
            f_message: {
                displayName: '短信内容',
            },
            f_userule: {
                displayName: '使用规则',
            },
            f_useshop: {
                displayName: '限制店铺',
            },
            f_initnum: {
                displayName: '初始数量'
            },
            f_useCount: {
                displayName: '已赠送数量',
            }
        });

    },

    onEticketDestoryGridPanelCellContextMenu: function (tableview, td, cellIndex, record, tr, rowIndex, e, eOpts) {
        var targetDel = "/action/eticket/delete.do";
        var storeId = 'EticketManagerStore';
        var refreshUrl = "/action/eticket/list.do?system=ytadmin@7788";
        var rightMenu = new CallCenterApp.view.RightClickMenu({
            record: record,
            targetDel: targetDel,
            storeId: storeId,
            refreshUrl: refreshUrl
        });
        e.preventDefault();
        //定位。显示 右键菜单
        rightMenu.showAt(e.getXY());
    },

    onEticketDestoryGridPanelRowClick: function (tableview, record, tr, rowIndex, e, eOpts) {
        var record = record.data;
        var EticketManagerPropertyGrid = Ext.getCmp('EticketManagerPropertyGrid');
        /**LimitShop**/
        var useshop = record.f_useshop;
        var result;
        var shopStr;
        if (useshop !== undefined && useshop !== '') {
            result = JSON.parse(useshop);
            shopStr = result[0].shopName;
            for (var i = 1; i < result.length; i++) {
                if (shopStr === undefined) {
                    shopStr = result[i].shopName;
                } else {
                    if (result[i].shopName !== undefined) {
                        shopStr = shopStr + ',' + result[i].shopName;
                    }
                }


            }
        }


        EticketManagerPropertyGrid.setSource({
            f_id: record.f_id,
            f_name: record.f_name,
            f_type: record.f_type,
            f_starttime: (record.f_starttime === undefined) ? undefined : record.f_starttime,
            f_endtime: (record.f_endtime === undefined) ? undefined : record.f_endtime,
            f_oneuse: record.f_oneuse,
            f_oneget: record.f_oneget,
            f_getlimite: record.f_getlimite,
            f_minspending: (record.f_minspending === undefined) ? undefined : record.f_minspending + '元',
            f_money: (record.f_money === undefined) ? undefined : record.f_money + '元',
            f_rebate: record.f_rebate,
            f_prenum: record.f_prenum,
            f_details: record.f_details,
            f_message: record.f_message,
            f_userule: record.f_userule,
            f_useshop: shopStr,
            f_useCount: record.f_initnum
        }, {
            f_id: {
                displayName: '电子券序号',
            },
            f_name: {
                displayName: '电子券名称',
            },
            f_type: {
                displayName: '电子券类型',
            },
            f_starttime: {
                displayName: '有效开始日期',
            },
            f_endtime: {
                displayName: '有效结束日期',
            },
            f_oneuse: {
                displayName: '单人单日限用',
            },
            f_oneget: {
                displayName: '单人单日限领',
            },
            f_getlimite: {
                displayName: '单人限领',
            },
            f_minspending: {
                displayName: '最低消费额',
            },
            f_money: {
                displayName: '优惠券金额',
            },
            f_rebate: {
                displayName: '折扣',
            },
            f_prenum: {
                displayName: '预发数量',
            },
            f_details: {
                displayName: '优惠详情',
            },
            f_message: {
                displayName: '短信内容',
            },
            f_userule: {
                displayName: '使用规则',
            },
            f_useshop: {
                displayName: '限制店铺',
            },
        });

    },

    onEticketManagerTabPanelTabChange: function (tabPanel, newCard, oldCard, eOpts) {
        /**切换tab选项**/
        if (newCard.getItemId() === 'ncanUseEticket') {
            var EticketDestoryStore = Ext.getStore('EticketDestoryStore');
            EticketDestoryStore.removeAll();
            var ajaxProxy = EticketDestoryStore.getProxy();
            var url = Ext.getStore('ConfigStore').getAt(0).get('WebServerUrl');
            ajaxProxy.setUrl(url + "/action/eticket/list.do?system=ytadmin@7788&status=0");
            EticketDestoryStore.load();

        }
    },

    onReFreshButtonClick: function (button, e, eOpts) {
        var EticketManagerStore = Ext.getStore('EticketManagerStore');
        var ajaxProxy = EticketManagerStore.getProxy();
        var url = Ext.getStore('ConfigStore').getAt(0).get('WebServerUrl');
        ajaxProxy.setUrl(url + "/action/eticket/list.do?system=ytadmin@7788&status=1");
        EticketManagerStore.load();
    },

    onEticketManagerPanelRender: function (component, eOpts) {
        this.onReFreshButtonClick(null, null, null);
    }

});
