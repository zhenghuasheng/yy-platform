/*
 * File: app/view/HgCarDirectMagPanelViewController.js
 *
 * This file was generated by Sencha Architect version 3.2.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 5.0.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 5.0.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('CallCenterApp.view.HgCarDirectMagPanelViewController', {
    extend: 'Ext.app.ViewController',
    alias: 'controller.hgcardirectmagpanel',

    onCarBrandSelectRender: function (component, eOpts) {
        var carBrandStore = Ext.getStore('CarBrandStord');

        if (carBrandStore.data.length > 0) {
            return;
        }

        var ajaxProxy = carBrandStore.getProxy();
        var url = Ext.getStore('ConfigStore').getAt(0).get('CarBrandServerUrl');
        ajaxProxy.setUrl(url + "/car/queryBrand");
        carBrandStore.load();
    },

    onCarBrandSelectSelect: function (combo, records, eOpts) {
        var brandId = records[0].data.id;

        var carsetStore = Ext.getStore('CarsetStore');

        var ajaxProxy = carsetStore.getProxy();

        var url = Ext.getStore('ConfigStore').getAt(0).get('CarBrandServerUrl');
        ajaxProxy.setUrl(url + "/car/queryCarset?id=" + brandId);
        carsetStore.load();
    },

    onCarsetSelectSelect: function (combo, records, eOpts) {
        var carsetId = records[0].data.id;
        if (carsetId === 0) {
            return;
        }

        var carTypeStore = Ext.getStore('CarTypeStore');

        var ajaxProxy = carTypeStore.getProxy();

        var url = Ext.getStore('ConfigStore').getAt(0).get('CarBrandServerUrl');
        ajaxProxy.setUrl(url + "/car/queryCar?id=" + carsetId);
        carTypeStore.load();
    },

    onResetBtnClick: function (button, e, eOpts) {
        var HgCarDirectMagPanel = button.up('#HgCarDirectMagPanel');

        var CarBrandSelect = HgCarDirectMagPanel.down('#CarBrandSelect');

        var CarsetSelect = HgCarDirectMagPanel.down('#CarsetSelect');

        var CarTypeSelect = HgCarDirectMagPanel.down('#CarTypeSelect');

        var CarStatusSelect = HgCarDirectMagPanel.down('#CarStatusSelect');

        CarBrandSelect.reset();
        CarsetSelect.reset();
        CarTypeSelect.reset();
        CarStatusSelect.reset();
    },

    onQueryBtnClick: function (button, e, eOpts) {
        var HgCarDirectMagPanel = button.up('#HgCarDirectMagPanel');

        var CarBrandSelect = HgCarDirectMagPanel.down('#CarBrandSelect');

        var CarsetSelect = HgCarDirectMagPanel.down('#CarsetSelect');

        var CarTypeSelect = HgCarDirectMagPanel.down('#CarTypeSelect');

        var CarStatusSelect = HgCarDirectMagPanel.down('#CarStatusSelect');

        var Carset = '';
        var CarType = '';
        var CarStatus = '';
        if (CarsetSelect.value !== null) {
            Carset = CarsetSelect.getValue();
        }

        if (CarTypeSelect.value !== null) {
            CarType = CarTypeSelect.getValue();
        }
        if (CarStatusSelect.value !== null) {
            CarStatus = CarStatusSelect.getValue();
        }

        var url = Ext.getStore('ConfigStore').getAt(0).get('OrderServerUrl');

        var HgCarDirectStore = Ext.getStore('HgCarDirectStore');

        var ajaxProxy = HgCarDirectStore.getProxy();

        ajaxProxy.setUrl(url + "/hg/car/direct/list.do?carsetId=" + Carset + '&carId=' + CarType + '&status=' + CarStatus);
        HgCarDirectStore.load();


    },

    onCarDirectListGridPanelRender: function (component, eOpts) {
        var url = Ext.getStore('ConfigStore').getAt(0).get('OrderServerUrl');

        var HgCarDirectStore = Ext.getStore('HgCarDirectStore');

        var ajaxProxy = HgCarDirectStore.getProxy();

        ajaxProxy.setUrl(url + "/hg/car/direct/list.do");
        HgCarDirectStore.load();

    },

    onCarDirectListGridPanelRowClick: function (tableview, record, tr, rowIndex, e, eOpts) {
        var HgDirectCarDetailPropertyPanel = Ext.getCmp('HgDirectCarDetailPropertyPanel');

        var record = record.data;

        HgDirectCarDetailPropertyPanel.setSource({

                title: record.title,
                guidePrice: record.guidePrice,
                brand: record.brand,
                carsetName: record.carsetName,
                carName: record.carName,
                color: record.color,
                directPrice: record.directPrice,
                financialPlan: record.financialPlan,
                dayPay: record.dayPay,
                status: record.status,
                image: record.image,
                type: record.type,
                operatorId: record.operatorId,
                operator: record.operator,
                operateTime: record.operateTime
            }, {

                title: {displayName: '车型名称'},

                guidePrice: {
                    displayName: '指导价格',
                    renderer: function (v) {
                        var value = Ext.util.Format.number(v / 10000, '0.00');
                        return value + '万';
                    }
                },

                brand: {displayName: '品牌'},
                carsetName: {displayName: '车系'},
                carName: {displayName: '车型'},
                color: {displayName: '车辆颜色'},
                directPrice: {
                    displayName: '直销价格',
                    renderer: function (v) {
                        var value = Ext.util.Format.number(v / 10000, '0.00');
                        return value + '万';
                    }
                },
                financialPlan: {displayName: '金融方案'},
                dayPay: {
                    displayName: '日供',
                    renderer: function (v) {
                        return v + '元';
                    }
                },
                status: {
                    displayName: '状态',
                    renderer: function (v) {
                        if (v === false) {
                            return '禁用';
                        } else if (v === true) {
                            return '启用';
                        } else {
                            return '未知';
                        }
                    }

                },
                image: {displayName: '图片路径'},
                type: {
                    displayName: '车辆来源',
                    renderer: function (v) {
                        if (v === 0) {
                            return '宏高融资';
                        } else if (v === 1) {
                            return '直销';
                        } else {
                            return '未知';
                        }
                    }
                },
                operatorId: {displayName: '操作员ID'},
                operator: {displayName: '操作员姓名'},
                operateTime: {
                    displayName: '操作时间',
                    renderer: function (v) {
                        return v.toLocaleString();
                    }
                }
            }
        );
    }

});
