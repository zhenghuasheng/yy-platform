/*
 * File: app/view/CarsetConfigPanelViewController.js
 *
 * This file was generated by Sencha Architect version 3.2.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 5.0.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 5.0.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('CallCenterApp.view.CarsetConfigPanelViewController', {
    extend: 'Ext.app.ViewController',
    alias: 'controller.carsetconfigpanel',

    onTabpanelTabChange: function (tabPanel, newCard, oldCard, eOpts) {
        var CarsetConfigPanel = tabPanel.up('#CarsetConfigPanel');
        var carsetSelector = CarsetConfigPanel.down('#carsetSelector');
        var carsetId = carsetSelector.getValue();
        if (carsetId === null) {
            return;
        }
        var CarTypeConfigStore = Ext.getStore('CarTypeConfigStore');
        var ajaxProxy = CarTypeConfigStore.getProxy();

        var url = Ext.getStore('ConfigStore').getAt(0).get('OrderServerUrl');
        if (newCard.itemId === 'effectCarsetPanel') {
            ajaxProxy.setUrl(url + "/hg/car/bottom/list.do?carsetId=" + carsetId + '&status=true');
        } else {
            ajaxProxy.setUrl(url + "/hg/car/bottom/list.do?carsetId=" + carsetId + '&status=false');
        }
        CarTypeConfigStore.load();
    },

    onCarBrandSelectorRender: function (component, eOpts) {
        var carBrandStore = Ext.getStore('CarBrandStord');
        if (carBrandStore.data.length > 0) {
            return;
        }
        var ajaxProxy = carBrandStore.getProxy();
        var url = Ext.getStore('ConfigStore').getAt(0).get('CarBrandServerUrl');
        ajaxProxy.setUrl(url + "/car/queryBrand");
        carBrandStore.load();
    },

    onCarBrandSelectorSelect: function (combo, records, eOpts) {
        var brandId = records[0].data.id;

        var carsetStore = Ext.getStore('CarsetStore');
        var ajaxProxy = carsetStore.getProxy();

        var url = Ext.getStore('ConfigStore').getAt(0).get('CarBrandServerUrl');
        ajaxProxy.setUrl(url + "/car/queryCarset?id=" + brandId);
        carsetStore.load();
    },

    onCarsetSelectorSelect: function (combo, records, eOpts) {

        var carsetId = records[0].data.id;
        var CarTypeConfigStore = Ext.getStore('CarTypeConfigStore');
        var ajaxProxy = CarTypeConfigStore.getProxy();

        var CarsetConfigPanel = combo.up('#CarsetConfigPanel');
        var CarsetConfigTabPanel = CarsetConfigPanel.down('#CarsetConfigTabPanel');

        var ActiveTab = CarsetConfigTabPanel.getActiveTab();
        var url = Ext.getStore('ConfigStore').getAt(0).get('OrderServerUrl');
        if (ActiveTab.itemId === 'effectCarsetPanel') {

            ajaxProxy.setUrl(url + "/hg/car/bottom/list.do?carsetId=" + carsetId + '&status=true');
        } else {
            ajaxProxy.setUrl(url + "/hg/car/bottom/list.do?carsetId=" + carsetId + '&status=false');
        }
        CarTypeConfigStore.load();
    }

});
