/*
 * File: app/controller/LoginController.js
 *
 * This file was generated by Sencha Architect version 3.2.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.4.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.4.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('platformApp.controller.LoginController', {
    extend: 'Ext.app.Controller',

    config: {
        control: {
            "textfield#userMobile": {
                blur: 'onUserMobileBlur'
            }
        }
    },

    onUserMobileBlur: function(textfield, e, eOpts) {
        
        var ws=new WebSocket('ws://' + window.location.host+'/api/webSocketHandler');


        ws.onopen = function () {
            //CONNECTING (0)：表示还没建立连接；
            //OPEN (1)： 已经建立连接，可以进行通讯；
            //CLOSING (2)：通过关闭握手，正在关闭连接；
            //CLOSED (3)：连接已经关闭或无法打开；
            if(this.readyState===3){
                Ext.Msg.alert('消息中心提示', '连接出错了：连接已经关闭或无法打开！');
            }

        };
        ws.onmessage = function (event) {

            var win= new Ext.window.Toast({
                html: 订单消息提醒,
                title: '订单消息提醒',
                width: 40,
                height:50,
                autoCloseDelay:30000,
                border:true,
                frame:true,
                frameHeader:true,
                align: 'br',
                bodyStyle: {
                    background:'#ffc',
                    padding: '10px'
                }
            });

            win.show();

        };
        ws.onclose=function(event){

        };
        // Success
        var successCallback = function(resp, ops) {
            var result = JSON.parse(resp.responseText);

            if(result.succeed) {
                var PreLoginStore = Ext.getStore('PreLoginStore');
                PreLoginStore.removeAll();
                PreLoginStore.add({token:result.object});
            }else {

                if(result.ptError === 'PT_ERROR_PARAMETER'){
                    Ext.Msg.alert('登录提示', result.description);
                }else {
                    Ext.Msg.alert('登录提示', '用户不存在或已失效');
                }

            }

        //     alert(Ext.getStore('PreLoginStore').getAt(0).get('token'));
        };

        // Failure
        var failureCallback = function(resp, ops) {

            // Show login failure error
            Ext.Msg.alert('登录提示', '手机验证失败请重试');

        };
        var phone = textfield.getValue();
            Ext.Ajax.request({
                url: "/user/getToken.do",
                params:  {
                    phone: phone,
                    system: '1000'
                },
                success: successCallback,
                failure: failureCallback
                });
    }

});